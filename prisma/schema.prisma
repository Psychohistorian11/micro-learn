// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String           @id @default(uuid())
  email          String           @unique
  username       String           @unique
  password       String
  profilePicture String           @default("") // TODO: default avatar
  description    String           @default("")
  role           Role

  resources      Resource[]       @relation("UserResources")
  communities    User_Community[]

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@map("users")
}

model Community {
  id          String              @id @default(cuid())
  title       String
  image       String?
  description String?

  users       User_Community[]
  resources   Resource_Community[]

  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
}

model User_Community {
  id          String     @id @default(cuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  community   Community  @relation(fields: [communityId], references: [id])
  communityId String
  role        CommunityRole
}
model Resource {
  id          String     @id @default(uuid())
  title       String
  isPublic    Boolean    @default(true)
  image       String?
  description String
  attachment  String
  type        ResourceType

  authorId    String?
  author      User?      @relation("UserResources", fields: [authorId], references: [id])

  communities Resource_Community[]
  areas       Area[]     @relation("ResourceAreas")

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Area {
  id       String     @id @default(uuid())
  name     String     @unique
  resources Resource[] @relation("ResourceAreas")
}


model Resource_Community {
  id          String     @id @default(uuid())
  resource    Resource   @relation(fields: [resourceId], references: [id])
  resourceId  String
  community   Community  @relation(fields: [communityId], references: [id])
  communityId String
}

enum Role {
  teacher
  student
}

enum CommunityRole {
  Admin
  Mod
  Participant
}

enum ResourceType {
  Video
  Podcast
  Slides
  Infography
  Text
}
